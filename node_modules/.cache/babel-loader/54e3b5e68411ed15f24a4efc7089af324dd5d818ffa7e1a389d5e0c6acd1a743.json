{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\BRUNO\\\\Downloads\\\\Dummy-Ordering-App-React\\\\src\\\\Components\\\\Meals\\\\AvailableMeals.js\",\n  _s = $RefreshSig$();\nimport { useEffect, useState } from 'react';\nimport classes from './AvailableMeals.module.css';\nimport Card from '../UI/Card';\nimport MealItem from './MealItem/MealItem';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AvailableMeals = () => {\n  _s();\n  const [meals, setMeals] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [httpError, setHttpError] = useState();\n  useEffect(() => {\n    const fetchMeals = async () => {\n      const response = await fetch('https://react-http-bbcab-default-rtdb.firebaseio.com/meals');\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const responseData = await response.json();\n      const loadedMeals = [];\n      for (const key in responseData) {\n        loadedMeals.push({\n          id: key,\n          name: responseData[key].name,\n          description: responseData[key].description,\n          price: responseData[key].price\n        });\n      }\n      setMeals(loadedMeals);\n      setIsLoading(false);\n    };\n    fetchMeals().catch(error => {\n      setIsLoading(false);\n      setHttpError(error.message);\n    });\n  }, []);\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsIsLoading,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 54\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 10\n    }, this);\n  }\n  if (httpError) {\n    return /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.MealsError,\n      children: /*#__PURE__*/_jsxDEV(\"p\", {\n        children: httpError\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 50\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 10\n    }, this);\n  }\n  const mealsList = meals.map(meal => /*#__PURE__*/_jsxDEV(MealItem, {\n    id: meal.id,\n    name: meal.name,\n    description: meal.description,\n    price: meal.price\n  }, meal.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 3\n  }, this));\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.meals,\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: mealsList\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 3\n  }, this);\n};\n_s(AvailableMeals, \"XwTEMMx3K3MJQ9Z1gqZi46hA7qU=\");\n_c = AvailableMeals;\nexport default AvailableMeals;\nvar _c;\n$RefreshReg$(_c, \"AvailableMeals\");","map":{"version":3,"names":["useEffect","useState","classes","Card","MealItem","jsxDEV","_jsxDEV","AvailableMeals","_s","meals","setMeals","isLoading","setIsLoading","httpError","setHttpError","fetchMeals","response","fetch","ok","Error","responseData","json","loadedMeals","key","push","id","name","description","price","catch","error","message","className","MealsIsLoading","children","fileName","_jsxFileName","lineNumber","columnNumber","MealsError","mealsList","map","meal","_c","$RefreshReg$"],"sources":["C:/Users/BRUNO/Downloads/Dummy-Ordering-App-React/src/Components/Meals/AvailableMeals.js"],"sourcesContent":["import { useEffect, useState } from 'react';\r\nimport classes from './AvailableMeals.module.css';\r\nimport Card from '../UI/Card';\r\nimport MealItem from './MealItem/MealItem';\r\n\r\nconst AvailableMeals = () => {\r\n\t\r\n\tconst [meals, setMeals] = useState([]);\r\n\tconst [isLoading, setIsLoading] = useState(true);\r\n\tconst [httpError ,setHttpError] = useState();\r\n\r\n\tuseEffect(() => {\r\n\t\t\r\n\t\tconst fetchMeals = async () => {\r\n\r\n\t\t\tconst response = await fetch(\r\n\r\n\t\t\t\t'https://react-http-bbcab-default-rtdb.firebaseio.com/meals'\r\n\r\n\t\t\t);\r\n\r\n\t\t\t\tif(!response.ok) {\r\n\t\t\t\t\tthrow new Error ('Something went wrong!');\r\n\t\t\t\t}\r\n\r\n\t\t\tconst responseData = await response.json();\r\n\r\n\t\t\tconst loadedMeals = [];\r\n\r\n\t\t\tfor (const key in responseData) {\r\n\t\t\t\tloadedMeals.push({\r\n\t\t\t\t\tid: key,\r\n\t\t\t\t\tname: responseData[key].name,\r\n\t\t\t\t\tdescription: responseData[key].description,\r\n\t\t\t\t\tprice: responseData[key].price,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tsetMeals(loadedMeals);\r\n\t\t\tsetIsLoading(false);\r\n\t\t};\r\n\r\n\r\n\t\t\tfetchMeals().catch((error)=>{\r\n\t\t\t\tsetIsLoading(false);\r\n\t\t\t\tsetHttpError(error.message);\r\n\t\t\t});\r\n\t}, []);\r\n\r\n\tif(isLoading){\r\n\t\treturn <section className={classes.MealsIsLoading}><p>Loading...</p></section>\r\n\t}\r\n\r\n\tif(httpError) {\r\n\t\treturn <section className={classes.MealsError}><p>{httpError}</p></section>\r\n\t}\r\n\r\n\tconst mealsList = meals.map((meal) => (\r\n\t\t<MealItem\r\n\t\t\tid={meal.id}\r\n\t\t\tkey={meal.id}\r\n\t\t\tname={meal.name}\r\n\t\t\tdescription={meal.description}\r\n\t\t\tprice={meal.price}\r\n\t\t/>\r\n\t));\r\n\treturn (\r\n\t\t<section className={classes.meals}>\r\n\t\t\t<Card>\r\n\t\t\t\t<ul>{mealsList}</ul>\r\n\t\t\t</Card>\r\n\t\t</section>\r\n\t);\r\n};\r\n\r\nexport default AvailableMeals;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}